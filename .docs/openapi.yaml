openapi: 3.0.3
info:
  title: 'SaaSBase API API Documentation'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8989'
tags:
  -
    name: Endpoints
    description: ''
paths:
  /api/v1/broadcasting/auth:
    get:
      summary: 'Authenticate the request for channel access.'
      operationId: authenticateTheRequestForChannelAccess
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/health:
    get:
      summary: ''
      operationId: getApiHealth
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/v1/auth/token/refresh:
    post:
      summary: ''
      operationId: postApiV1AuthTokenRefresh
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/v1/auth/login:
    post:
      summary: ''
      operationId: postApiV1AuthLogin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/v1/auth/logout:
    post:
      summary: ''
      operationId: postApiV1AuthLogout
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/v1/auth/register:
    post:
      summary: ''
      operationId: postApiV1AuthRegister
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: b
                  nullable: false
                lastName:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: 'n'
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: ashly64@example.com
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: pBNvYg
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Eius et animi quos velit et.'
                  nullable: true
                birthDate:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-06-05T07:09:32'
                  nullable: true
                phone:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: vdljnikhwaykcmyu
                  nullable: true
              required:
                - firstName
                - lastName
                - email
                - password
      security: []
  /api/v1/auth/forgot-password:
    post:
      summary: 'Send a reset link to the given user.'
      operationId: sendAResetLinkToTheGivenUser
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: gbailey@example.net
                  nullable: false
              required:
                - email
      security: []
  /api/v1/auth/reset-password:
    post:
      summary: "Reset the given user's password."
      operationId: resetTheGivenUsersPassword
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: ''
                  example: architecto
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: zbailey@example.net
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: '-0pBNvYgxw'
                  nullable: false
              required:
                - token
                - email
                - password
      security: []
  '/api/v1/oauth/{provider}/redirect':
    get:
      summary: ''
      operationId: getApiV1OauthProviderRedirect
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: provider
        description: ''
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/oauth/{provider}/callback':
    get:
      summary: ''
      operationId: getApiV1OauthProviderCallback
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: provider
        description: ''
        example: architecto
        required: true
        schema:
          type: string
  /api/v1/email/verify:
    post:
      summary: "Mark the authenticated user's email address as verified."
      operationId: markTheAuthenticatedUsersEmailAddressAsVerified
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: ''
                  example: architecto
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: zbailey@example.net
                  nullable: false
              required:
                - token
                - email
      security: []
  /api/v1/email/verification-notification:
    post:
      summary: 'Resend the email verification notification.'
      operationId: resendTheEmailVerificationNotification
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/v1/2fa/setup:
    post:
      summary: ''
      operationId: postApiV12faSetup
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/v1/2fa/enable:
    post:
      summary: ''
      operationId: postApiV12faEnable
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  description: 'Must be 6 characters.'
                  example: bngzmi
                  nullable: false
              required:
                - code
      security: []
  /api/v1/2fa/disable:
    post:
      summary: ''
      operationId: postApiV12faDisable
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/v1/2fa/verify:
    post:
      summary: ''
      operationId: postApiV12faVerify
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  description: ''
                  example: architecto
                  nullable: false
              required:
                - code
      security: []
  /api/v1/sessions:
    get:
      summary: 'Get all sessions for the authenticated user.'
      operationId: getAllSessionsForTheAuthenticatedUser
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/v1/tenant/invitations/{token}':
    get:
      summary: ''
      operationId: getApiV1TenantInvitationsToken
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Domain\Tenant\Models\TenantInvitation].'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Domain\Tenant\Models\TenantInvitation].'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: token
        description: ''
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/application/invitations/{token}':
    get:
      summary: ''
      operationId: getApiV1ApplicationInvitationsToken
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Domain\Auth\Models\ApplicationInvitation].'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Domain\Auth\Models\ApplicationInvitation].'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: token
        description: ''
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/tenants/invitations/{token}/accept':
    post:
      summary: 'Accept an invitation by token.'
      operationId: acceptAnInvitationByToken
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: token
        description: ''
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/tenants/invitations/{token}/reject':
    post:
      summary: 'Accept an invitation by token.'
      operationId: acceptAnInvitationByToken
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: token
        description: ''
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/tenants/{tenant}/invitations':
    post:
      summary: 'Send an invitation to join a tenant.'
      operationId: sendAnInvitationToJoinATenant
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: gbailey@example.net
                  nullable: false
                role:
                  type: string
                  description: 'Must not be greater than 64 characters.'
                  example: m
                  nullable: false
              required:
                - email
                - role
      security: []
    parameters:
      -
        in: path
        name: tenant
        description: 'The tenant.'
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/tenants/{tenant_id}/invitations':
    get:
      summary: ''
      operationId: getApiV1TenantsTenant_idInvitations
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: tenant_id
        description: 'The ID of the tenant.'
        example: fd925344-bd04-51f0-be90-33e35bd33a05
        required: true
        schema:
          type: string
  '/api/v1/tenants/{tenant_id}/invitations/{invitation_id}':
    delete:
      summary: 'Cancel an invitation.'
      operationId: cancelAnInvitation
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: tenant_id
        description: 'The ID of the tenant.'
        example: fd925344-bd04-51f0-be90-33e35bd33a05
        required: true
        schema:
          type: string
      -
        in: path
        name: invitation_id
        description: 'The ID of the invitation.'
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/tenants/{tenant_id}/invitations/{invitation_id}/resend':
    post:
      summary: 'Resend an invitation.'
      operationId: resendAnInvitation
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: tenant_id
        description: 'The ID of the tenant.'
        example: fd925344-bd04-51f0-be90-33e35bd33a05
        required: true
        schema:
          type: string
      -
        in: path
        name: invitation_id
        description: 'The ID of the invitation.'
        example: architecto
        required: true
        schema:
          type: string
  /api/v1/application/invitations:
    post:
      summary: 'Send an invitation to join the application.'
      operationId: sendAnInvitationToJoinTheApplication
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: gbailey@example.net
                  nullable: false
              required:
                - email
      security: []
    get:
      summary: ''
      operationId: getApiV1ApplicationInvitations
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/v1/application/invitations/{invitation_id}':
    delete:
      summary: 'Cancel an invitation.'
      operationId: cancelAnInvitation
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: invitation_id
        description: 'The ID of the invitation.'
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/application/invitations/{invitation_id}/resend':
    post:
      summary: 'Resend an invitation.'
      operationId: resendAnInvitation
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: invitation_id
        description: 'The ID of the invitation.'
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/application/invitations/{token}/accept':
    post:
      summary: 'Accept an invitation by token.'
      operationId: acceptAnInvitationByToken
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: token
        description: ''
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/application/invitations/{token}/reject':
    post:
      summary: 'Reject an invitation by token.'
      operationId: rejectAnInvitationByToken
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: token
        description: ''
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/images/{modelName}/{modelId}/media/{mediaId}/{fileName}':
    get:
      summary: ''
      operationId: getApiV1ImagesModelNameModelIdMediaMediaIdFileName
      description: ''
      parameters: []
      responses:
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid signature.'
                properties:
                  message:
                    type: string
                    example: 'Invalid signature.'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: modelName
        description: ''
        example: architecto
        required: true
        schema:
          type: string
      -
        in: path
        name: modelId
        description: ''
        example: architecto
        required: true
        schema:
          type: string
      -
        in: path
        name: mediaId
        description: ''
        example: architecto
        required: true
        schema:
          type: string
      -
        in: path
        name: fileName
        description: ''
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/user/profile-image/{user_id}':
    get:
      summary: ''
      operationId: getApiV1UserProfileImageUser_id
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: !!binary 
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: efb6c5e5-f708-5a9e-89d8-c9963afd4ff8
        required: true
        schema:
          type: string
  /api/v1/me:
    get:
      summary: ''
      operationId: getApiV1Me
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/user/profile:
    get:
      summary: ''
      operationId: getApiV1UserProfile
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiV1UserProfile
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                bio:
                  type: string
                  description: 'Must be at least 2 characters. Must not be greater than 255 characters.'
                  example: b
                  nullable: true
                location:
                  type: string
                  description: 'Must be at least 2 characters. Must not be greater than 255 characters.'
                  example: 'n'
                  nullable: true
                birthDate:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-06-05T07:09:32'
                  nullable: true
                position:
                  type: string
                  description: 'Must be at least 2 characters. Must not be greater than 255 characters.'
                  example: g
                  nullable: true
                website:
                  type: string
                  description: 'Must be at least 2 characters. Must not be greater than 255 characters.'
                  example: z
                  nullable: true
                socialLinks:
                  type: object
                  description: ''
                  example: null
                  nullable: true
                  properties:
                    facebook:
                      type: string
                      description: 'Must be at least 2 characters. Must not be greater than 255 characters.'
                      example: m
                      nullable: true
                    instagram:
                      type: string
                      description: 'Must be at least 2 characters. Must not be greater than 255 characters.'
                      example: i
                      nullable: true
                    twitter:
                      type: string
                      description: 'Must be at least 2 characters. Must not be greater than 255 characters.'
                      example: 'y'
                      nullable: true
                    linkedin:
                      type: string
                      description: 'Must be at least 2 characters. Must not be greater than 255 characters.'
                      example: v
                      nullable: true
                    youtube:
                      type: string
                      description: 'Must be at least 2 characters. Must not be greater than 255 characters.'
                      example: d
                      nullable: true
      security: []
  /api/v1/user/settings:
    get:
      summary: ''
      operationId: getApiV1UserSettings
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiV1UserSettings
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                language:
                  type: string
                  description: 'Must not be greater than 10 characters.'
                  example: bngzmi
                  nullable: false
                theme:
                  type: string
                  description: ''
                  example: system
                  nullable: false
                  enum:
                    - light
                    - dark
                    - system
                timezone:
                  type: string
                  description: 'Must be a valid time zone, such as <code>Africa/Accra</code>.'
                  example: Europe/Dublin
                  nullable: false
                preferences:
                  type: array
                  description: ''
                  example:
                    - architecto
                  items:
                    type: string
      security: []
  /api/v1/user/settings/language:
    patch:
      summary: ''
      operationId: patchApiV1UserSettingsLanguage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                language:
                  type: string
                  description: 'Must not be greater than 10 characters.'
                  example: bngzmi
                  nullable: false
              required:
                - language
      security: []
  /api/v1/user/profile-image:
    post:
      summary: ''
      operationId: postApiV1UserProfileImage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: false
              required:
                - image
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1UserProfileImage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    get:
      summary: ''
      operationId: getApiV1UserProfileImage
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/user/skills:
    get:
      summary: ''
      operationId: getApiV1UserSkills
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiV1UserSkills
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                skillId:
                  type: string
                  description: 'Must be a valid UUID. The <code>id</code> of an existing record in the skills table.'
                  example: 6ff8f7f6-1eb3-3525-be4a-3932c805afed
                  nullable: false
                level:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 5.'
                  example: 2
                  nullable: false
                acquiredAt:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-06-05T07:09:32'
                  nullable: true
              required:
                - skillId
                - level
      security: []
  '/api/v1/user/skills/{id}':
    get:
      summary: ''
      operationId: getApiV1UserSkillsId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiV1UserSkillsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                level:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 5.'
                  example: 1
                  nullable: false
                acquiredAt:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-06-05T07:09:32'
                  nullable: true
              required:
                - level
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1UserSkillsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the skill.'
        example: 01973b12-a9cb-73e6-a1a4-af82a2f957b9
        required: true
        schema:
          type: string
  /api/v1/notifications:
    get:
      summary: ''
      operationId: getApiV1Notifications
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/notifications/mark-read:
    post:
      summary: ''
      operationId: postApiV1NotificationsMarkRead
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: array
                  description: 'Must be a valid UUID. The <code>id</code> of an existing record in the notifications table.'
                  example:
                    - 6ff8f7f6-1eb3-3525-be4a-3932c805afed
                  items:
                    type: string
              required:
                - ids
      security: []
  /api/v1/notifications/archive:
    post:
      summary: ''
      operationId: postApiV1NotificationsArchive
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: array
                  description: 'Must be a valid UUID. The <code>id</code> of an existing record in the notifications table.'
                  example:
                    - 6ff8f7f6-1eb3-3525-be4a-3932c805afed
                  items:
                    type: string
              required:
                - ids
      security: []
  /api/v1/user-identity/personal-data:
    post:
      summary: ''
      operationId: postApiV1UserIdentityPersonalData
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                gender:
                  type: string
                  description: ''
                  example: prefer_not_to_say
                  nullable: false
                  enum:
                    - male
                    - female
                    - prefer_not_to_say
                pesel:
                  type: string
                  description: 'Must not be greater than 11 characters.'
                  example: bngzmi
                  nullable: false
              required:
                - gender
                - pesel
      security: []
    get:
      summary: ''
      operationId: getApiV1UserIdentityPersonalData
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/v1/user-identity/documents:
    post:
      summary: ''
      operationId: postApiV1UserIdentityDocuments
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: passport
                  nullable: false
                  enum:
                    - tax_id
                    - passport
                    - id_card
                number:
                  type: string
                  description: ''
                  example: architecto
                  nullable: false
                country:
                  type: string
                  description: 'Must be 2 characters.'
                  example: ng
                  nullable: false
                issued_at:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-06-05T07:09:32'
                  nullable: true
                expires_at:
                  type: string
                  description: 'Must be a valid date. Must be a date after <code>issued_at</code>.'
                  example: '2051-06-29'
                  nullable: false
                meta:
                  type: object
                  description: ''
                  example: null
                  nullable: true
                  properties: {  }
                document_image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 10240 kilobytes.'
                  nullable: false
              required:
                - type
                - number
                - country
                - expires_at
                - document_image
      security: []
    get:
      summary: ''
      operationId: getApiV1UserIdentityDocuments
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example: []
      tags:
        - Endpoints
      security: []
  '/api/v1/user-identity/documents/{document_id}':
    get:
      summary: ''
      operationId: getApiV1UserIdentityDocumentsDocument_id
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Domain\Auth\Models\UserIdentityDocument] architecto'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Domain\Auth\Models\UserIdentityDocument] architecto'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: document_id
        description: 'The ID of the document.'
        example: architecto
        required: true
        schema:
          type: string
  /api/v1/table-settings:
    get:
      summary: ''
      operationId: getApiV1TableSettings
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiV1TableSettings
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                entity:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: b
                  nullable: false
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: 'n'
                  nullable: true
                config:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
                isDefault:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
              required:
                - entity
                - config
      security: []
  '/api/v1/table-settings/{setting_id}':
    put:
      summary: ''
      operationId: putApiV1TableSettingsSetting_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: b
                  nullable: true
                config:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
                isDefault:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
              required:
                - config
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1TableSettingsSetting_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: setting_id
        description: 'The ID of the setting.'
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/table-settings/{setting_id}/default':
    post:
      summary: ''
      operationId: postApiV1TableSettingsSetting_idDefault
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: setting_id
        description: 'The ID of the setting.'
        example: architecto
        required: true
        schema:
          type: string
  /api/v1/notification-settings:
    get:
      summary: ''
      operationId: getApiV1NotificationSettings
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiV1NotificationSettings
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                channel:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: b
                  nullable: false
                settingKey:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: 'n'
                  nullable: false
                enabled:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
              required:
                - channel
                - settingKey
                - enabled
      security: []
  /api/v1/notification-settings/bulk:
    put:
      summary: ''
      operationId: putApiV1NotificationSettingsBulk
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                settings:
                  type: array
                  description: ''
                  example:
                    - []
                  items:
                    type: object
                    properties:
                      channel:
                        type: string
                        description: 'Must not be greater than 255 characters.'
                        example: b
                        nullable: false
                      settingKey:
                        type: string
                        description: 'Must not be greater than 255 characters.'
                        example: 'n'
                        nullable: false
                      enabled:
                        type: boolean
                        description: ''
                        example: false
                        nullable: false
                    required:
                      - channel
                      - settingKey
                      - enabled
              required:
                - settings
      security: []
  /api/v1/trusted-devices:
    get:
      summary: ''
      operationId: getApiV1TrustedDevices
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1TrustedDevices
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/v1/trusted-devices/{device_id}':
    delete:
      summary: ''
      operationId: deleteApiV1TrustedDevicesDevice_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: device_id
        description: 'The ID of the device.'
        example: architecto
        required: true
        schema:
          type: string
  /api/v1/security-events:
    get:
      summary: ''
      operationId: getApiV1SecurityEvents
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/v1/security-events/{event_id}':
    get:
      summary: ''
      operationId: getApiV1SecurityEventsEvent_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: event_id
        description: 'The ID of the event.'
        example: architecto
        required: true
        schema:
          type: string
  /api/v1/utils/company-lookup:
    get:
      summary: ''
      operationId: getApiV1UtilsCompanyLookup
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                vatId:
                  type: string
                  description: ''
                  example: architecto
                  nullable: false
                country:
                  type: string
                  description: 'Must be 2 characters.'
                  example: ng
                  nullable: false
                force:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
              required:
                - vatId
                - country
      security: []
  /api/v1/utils/iban-info:
    get:
      summary: ''
      operationId: getApiV1UtilsIbanInfo
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                iban:
                  type: string
                  description: 'Must match the regex /^[A-Z]{2}[0-9]{2}[A-Z0-9]{1,30}$/.'
                  example: IY55VDB8W1GYYS44YYMFYNDG4L0U5MJ
                  nullable: false
                country:
                  type: string
                  description: 'Must match the regex /^[A-Z]{2}$/. Must be 2 characters.'
                  example: sc
                  nullable: false
              required:
                - iban
      security: []
  /api/v1/tenants/preview:
    get:
      summary: ''
      operationId: getApiV1TenantsPreview
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/tenants:
    get:
      summary: ''
      operationId: getApiV1Tenants
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiV1Tenants
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: b
                  nullable: false
                slug:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: 'n'
                  nullable: false
                vatId:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: gzmiyvdljnikhway
                  nullable: true
                taxId:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: kcmyuwpwlvqwrsit
                  nullable: true
                regon:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: cpscqldzsnrwtujw
                  nullable: true
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 254 characters.'
                  example: audrey.considine@example.net
                  nullable: true
                phone:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: lqppwqbewtnnoqit
                  nullable: true
                website:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: p
                  nullable: true
                country:
                  type: string
                  description: 'Must not be greater than 2 characters.'
                  example: xn
                  nullable: true
                description:
                  type: string
                  description: ''
                  example: 'Eius et animi quos velit et.'
                  nullable: true
              required:
                - name
                - slug
      security: []
  '/api/v1/tenants/{id}':
    get:
      summary: ''
      operationId: getApiV1TenantsId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiV1TenantsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: b
                  nullable: false
                slug:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: 'n'
                  nullable: false
                vatId:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: gzmiyvdljnikhway
                  nullable: true
                taxId:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: kcmyuwpwlvqwrsit
                  nullable: true
                regon:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: cpscqldzsnrwtujw
                  nullable: true
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 254 characters.'
                  example: audrey.considine@example.net
                  nullable: true
                phone:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: lqppwqbewtnnoqit
                  nullable: true
                website:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: p
                  nullable: true
                country:
                  type: string
                  description: 'Must not be greater than 2 characters.'
                  example: xn
                  nullable: true
                description:
                  type: string
                  description: ''
                  example: 'Eius et animi quos velit et.'
                  nullable: true
              required:
                - name
                - slug
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1TenantsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the tenant.'
        example: fd925344-bd04-51f0-be90-33e35bd33a05
        required: true
        schema:
          type: string
  '/api/v1/tenants/{tenant_id}/switch':
    post:
      summary: ''
      operationId: postApiV1TenantsTenant_idSwitch
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: tenant_id
        description: 'The ID of the tenant.'
        example: fd925344-bd04-51f0-be90-33e35bd33a05
        required: true
        schema:
          type: string
  '/api/v1/tenants/{tenant_id}/logo':
    post:
      summary: ''
      operationId: postApiV1TenantsTenant_idLogo
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: false
              required:
                - image
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1TenantsTenant_idLogo
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: tenant_id
        description: 'The ID of the tenant.'
        example: fd925344-bd04-51f0-be90-33e35bd33a05
        required: true
        schema:
          type: string
  '/api/v1/tenants/{tenant_id}/addresses':
    get:
      summary: ''
      operationId: getApiV1TenantsTenant_idAddresses
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiV1TenantsTenant_idAddresses
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                country:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: b
                  nullable: false
                postalCode:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: ngzmiyvdljnikhwa
                  nullable: true
                city:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: 'y'
                  nullable: false
                street:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: k
                  nullable: true
                building:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: cmyuwpwlvqwrsitc
                  nullable: true
                flat:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: pscqldzsnrwtujwv
                  nullable: true
                description:
                  type: string
                  description: 'Must not be greater than 1000 characters.'
                  example: 'Molestias fugit deleniti distinctio eum doloremque id.'
                  nullable: true
                type:
                  type: string
                  description: ''
                  example: residence
                  nullable: false
                  enum:
                    - residence
                    - billing
                    - registeredOffice
                    - correspondence
                    - contact
                isDefault:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
              required:
                - country
                - city
                - type
      security: []
    parameters:
      -
        in: path
        name: tenant_id
        description: 'The ID of the tenant.'
        example: fd925344-bd04-51f0-be90-33e35bd33a05
        required: true
        schema:
          type: string
  '/api/v1/tenants/{tenant_id}/addresses/{id}':
    get:
      summary: ''
      operationId: getApiV1TenantsTenant_idAddressesId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiV1TenantsTenant_idAddressesId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: 'Must be a valid UUID. The <code>id</code> of an existing record in the addresses table.'
                  example: 6ff8f7f6-1eb3-3525-be4a-3932c805afed
                  nullable: false
                country:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: g
                  nullable: false
                postalCode:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: zmiyvdljnikhwayk
                  nullable: true
                city:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: c
                  nullable: false
                street:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: m
                  nullable: true
                building:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: yuwpwlvqwrsitcps
                  nullable: true
                flat:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: cqldzsnrwtujwvlx
                  nullable: true
                description:
                  type: string
                  description: 'Must not be greater than 1000 characters.'
                  example: 'Deleniti distinctio eum doloremque id aut.'
                  nullable: true
                type:
                  type: string
                  description: ''
                  example: residence
                  nullable: false
                  enum:
                    - residence
                    - billing
                    - registeredOffice
                    - correspondence
                    - contact
                isDefault:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
              required:
                - id
                - country
                - city
                - type
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1TenantsTenant_idAddressesId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: tenant_id
        description: 'The ID of the tenant.'
        example: fd925344-bd04-51f0-be90-33e35bd33a05
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the address.'
        example: 01973b12-a73e-709c-9ded-50e7be68c743
        required: true
        schema:
          type: string
  '/api/v1/tenants/{tenant_id}/addresses/{address_id}/set-default':
    post:
      summary: ''
      operationId: postApiV1TenantsTenant_idAddressesAddress_idSetDefault
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: tenant_id
        description: 'The ID of the tenant.'
        example: fd925344-bd04-51f0-be90-33e35bd33a05
        required: true
        schema:
          type: string
      -
        in: path
        name: address_id
        description: 'The ID of the address.'
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/tenants/{tenant_id}/bank-accounts':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bankName:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: b
                  nullable: false
                accountNumber:
                  type: string
                  description: 'Must not be greater than 50 characters.'
                  example: 'n'
                  nullable: false
                swiftCode:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: gzmiyvdljnikhway
                  nullable: true
                iban:
                  type: string
                  description: 'Must not be greater than 50 characters.'
                  example: k
                  nullable: true
                currency:
                  type: string
                  description: 'Must not be greater than 3 characters.'
                  example: c
                  nullable: false
                description:
                  type: string
                  description: 'Must not be greater than 1000 characters.'
                  example: 'Nostrum aut adipisci quidem nostrum.'
                  nullable: true
                isDefault:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
              required:
                - bankName
                - accountNumber
                - currency
      security: []
    parameters:
      -
        in: path
        name: tenant_id
        description: 'The ID of the tenant.'
        example: fd925344-bd04-51f0-be90-33e35bd33a05
        required: true
        schema:
          type: string
  '/api/v1/tenants/{tenant_id}/bank-accounts/{bank_account}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bankName:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: b
                  nullable: false
                accountNumber:
                  type: string
                  description: 'Must not be greater than 50 characters.'
                  example: 'n'
                  nullable: false
                swiftCode:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: gzmiyvdljnikhway
                  nullable: true
                iban:
                  type: string
                  description: 'Must not be greater than 50 characters.'
                  example: k
                  nullable: true
                currency:
                  type: string
                  description: 'Must not be greater than 3 characters.'
                  example: c
                  nullable: false
                description:
                  type: string
                  description: 'Must not be greater than 1000 characters.'
                  example: 'Nostrum aut adipisci quidem nostrum.'
                  nullable: true
                isDefault:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
              required:
                - bankName
                - accountNumber
                - currency
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: tenant_id
        description: 'The ID of the tenant.'
        example: fd925344-bd04-51f0-be90-33e35bd33a05
        required: true
        schema:
          type: string
      -
        in: path
        name: bank_account
        description: ''
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/tenants/{tenant_id}/attachments':
    get:
      summary: ''
      operationId: getApiV1TenantsTenant_idAttachments
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiV1TenantsTenant_idAttachments
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: 'Must be a file. Must not be greater than 10240 kilobytes.'
                  nullable: false
              required:
                - file
      security: []
    parameters:
      -
        in: path
        name: tenant_id
        description: 'The ID of the tenant.'
        example: fd925344-bd04-51f0-be90-33e35bd33a05
        required: true
        schema:
          type: string
  '/api/v1/tenants/{tenant_id}/attachments/{media_id}':
    get:
      summary: ''
      operationId: getApiV1TenantsTenant_idAttachmentsMedia_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1TenantsTenant_idAttachmentsMedia_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: tenant_id
        description: 'The ID of the tenant.'
        example: fd925344-bd04-51f0-be90-33e35bd33a05
        required: true
        schema:
          type: string
      -
        in: path
        name: media_id
        description: 'The ID of the media.'
        example: 01973b12-a9d8-711b-be7f-76e889977a52
        required: true
        schema:
          type: string
  '/api/v1/tenants/{tenant_id}/attachments/{media_id}/download':
    get:
      summary: ''
      operationId: getApiV1TenantsTenant_idAttachmentsMedia_idDownload
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: tenant_id
        description: 'The ID of the tenant.'
        example: fd925344-bd04-51f0-be90-33e35bd33a05
        required: true
        schema:
          type: string
      -
        in: path
        name: media_id
        description: 'The ID of the media.'
        example: 01973b12-a9d8-711b-be7f-76e889977a52
        required: true
        schema:
          type: string
  '/api/v1/tenants/{tenant_id}/attachments/{media_id}/preview':
    get:
      summary: ''
      operationId: getApiV1TenantsTenant_idAttachmentsMedia_idPreview
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: tenant_id
        description: 'The ID of the tenant.'
        example: fd925344-bd04-51f0-be90-33e35bd33a05
        required: true
        schema:
          type: string
      -
        in: path
        name: media_id
        description: 'The ID of the media.'
        example: 01973b12-a9d8-711b-be7f-76e889977a52
        required: true
        schema:
          type: string
  '/api/v1/tenants/{tenant_id}/branding':
    get:
      summary: ''
      operationId: getApiV1TenantsTenant_idBranding
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiV1TenantsTenant_idBranding
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                colorPrimary:
                  type: string
                  description: 'Must match the regex /^#[0-9A-F]{6}$/i.'
                  example: '#5C489F$/i'
                  nullable: true
                colorSecondary:
                  type: string
                  description: 'Must match the regex /^#[0-9A-F]{6}$/i.'
                  example: '#5C489F$/i'
                  nullable: true
                shortName:
                  type: string
                  description: 'Must not be greater than 50 characters.'
                  example: l
                  nullable: true
                theme:
                  type: string
                  description: ''
                  example: dark
                  nullable: true
                  enum:
                    - light
                    - dark
                    - system
                pdfAccentColor:
                  type: string
                  description: 'Must match the regex /^#[0-9A-F]{6}$/i.'
                  example: '#5C489F$/i'
                  nullable: true
                emailSignatureHtml:
                  type: string
                  description: ''
                  example: architecto
                  nullable: true
                logo:
                  type: string
                  format: binary
                  description: 'Must be a file. Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: true
                favicon:
                  type: string
                  format: binary
                  description: 'Must be a file. Must be an image. Must not be greater than 1024 kilobytes.'
                  nullable: true
                customFont:
                  type: string
                  format: binary
                  description: 'Must be a file. Must not be greater than 2048 kilobytes.'
                  nullable: true
                pdfLogo:
                  type: string
                  format: binary
                  description: 'Must be a file. Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: true
                emailHeaderImage:
                  type: string
                  format: binary
                  description: 'Must be a file. Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: tenant_id
        description: 'The ID of the tenant.'
        example: fd925344-bd04-51f0-be90-33e35bd33a05
        required: true
        schema:
          type: string
  '/api/v1/tenants/{tenant_id}/branding/{collection}':
    delete:
      summary: ''
      operationId: deleteApiV1TenantsTenant_idBrandingCollection
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: tenant_id
        description: 'The ID of the tenant.'
        example: fd925344-bd04-51f0-be90-33e35bd33a05
        required: true
        schema:
          type: string
      -
        in: path
        name: collection
        description: ''
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/tenants/{tenant_id}/public-profile':
    get:
      summary: ''
      operationId: getApiV1TenantsTenant_idPublicProfile
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiV1TenantsTenant_idPublicProfile
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                publicName:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: b
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Eius et animi quos velit et.'
                  nullable: true
                websiteUrl:
                  type: string
                  description: 'Must be a valid URL. Must not be greater than 255 characters.'
                  example: 'http://www.ernser.org/harum-mollitia-modi-deserunt-aut-ab-provident-perspiciatis-quo.html'
                  nullable: true
                socialLinks:
                  type: array
                  description: ''
                  example: null
                  items:
                    type: object
                    nullable: true
                    properties:
                      platform:
                        type: string
                        description: 'This field is required when <code>social_links</code> is present. Must not be greater than 50 characters.'
                        example: 'n'
                        nullable: false
                      url:
                        type: string
                        description: 'This field is required when <code>social_links</code> is present. Must be a valid URL. Must not be greater than 255 characters.'
                        example: 'http://crooks.biz/et-fugiat-sunt-nihil-accusantium'
                        nullable: false
                visible:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                industry:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: m
                  nullable: true
                locationCity:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: 'y'
                  nullable: true
                locationCountry:
                  type: string
                  description: 'Must not be greater than 2 characters.'
                  example: uw
                  nullable: true
                address:
                  type: string
                  description: ''
                  example: architecto
                  nullable: true
                publicLogo:
                  type: string
                  format: binary
                  description: 'Must be a file. Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: true
                bannerImage:
                  type: string
                  format: binary
                  description: 'Must be a file. Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: true
              required:
                - publicName
      security: []
    parameters:
      -
        in: path
        name: tenant_id
        description: 'The ID of the tenant.'
        example: fd925344-bd04-51f0-be90-33e35bd33a05
        required: true
        schema:
          type: string
  '/api/v1/tenants/{tenant_id}/public-profile/{collection}':
    delete:
      summary: ''
      operationId: deleteApiV1TenantsTenant_idPublicProfileCollection
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: tenant_id
        description: 'The ID of the tenant.'
        example: fd925344-bd04-51f0-be90-33e35bd33a05
        required: true
        schema:
          type: string
      -
        in: path
        name: collection
        description: ''
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/tenants/{tenant_id}/logs':
    get:
      summary: ''
      operationId: getApiV1TenantsTenant_idLogs
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: tenant_id
        description: 'The ID of the tenant.'
        example: fd925344-bd04-51f0-be90-33e35bd33a05
        required: true
        schema:
          type: string
  '/api/v1/tenants/{tenant}/quota':
    get:
      summary: ''
      operationId: getApiV1TenantsTenantQuota
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: tenant
        description: 'The tenant.'
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/tenants/{tenant}/current-plan':
    get:
      summary: ''
      operationId: getApiV1TenantsTenantCurrentPlan
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: tenant
        description: 'The tenant.'
        example: architecto
        required: true
        schema:
          type: string
  /api/v1/feeds:
    get:
      summary: ''
      operationId: getApiV1Feeds
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                perPage:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 100.'
                  example: 1
                  nullable: false
                sort:
                  type: string
                  description: ''
                  example: '-createdAt'
                  nullable: false
                  enum:
                    - createdAt
                    - updatedAt
                    - '-createdAt'
                    - '-updatedAt'
      security: []
    post:
      summary: ''
      operationId: postApiV1Feeds
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: b
                  nullable: false
                content:
                  type: string
                  description: ''
                  example: architecto
                  nullable: false
              required:
                - title
                - content
      security: []
  '/api/v1/feeds/{feed_id}':
    get:
      summary: ''
      operationId: getApiV1FeedsFeed_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1FeedsFeed_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: feed_id
        description: 'The ID of the feed.'
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/feeds/{feed_id}/comments':
    post:
      summary: ''
      operationId: postApiV1FeedsFeed_idComments
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: ''
                  example: architecto
                  nullable: false
              required:
                - content
      security: []
    parameters:
      -
        in: path
        name: feed_id
        description: 'The ID of the feed.'
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/feed-comments/{comment_id}':
    delete:
      summary: ''
      operationId: deleteApiV1FeedCommentsComment_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: comment_id
        description: 'The ID of the comment.'
        example: architecto
        required: true
        schema:
          type: string
  /api/v1/chat/rooms:
    get:
      summary: 'List all direct message rooms for the current user.'
      operationId: listAllDirectMessageRoomsForTheCurrentUser
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Create or get a direct message room for the current user and another user.'
      operationId: createOrGetADirectMessageRoomForTheCurrentUserAndAnotherUser
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: 'Must be a valid UUID. The <code>id</code> of an existing record in the users table.'
                  example: 6ff8f7f6-1eb3-3525-be4a-3932c805afed
                  nullable: false
              required:
                - userId
      security: []
  '/api/v1/chat/rooms/{room_id}/messages':
    post:
      summary: 'Send a message in a chat room.'
      operationId: sendAMessageInAChatRoom
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: ''
                  example: architecto
                  nullable: false
                parentId:
                  type: string
                  description: 'Must be a valid UUID. The <code>id</code> of an existing record in the chat_messages table.'
                  example: a4855dc5-0acb-33c3-b921-f4291f719ca0
                  nullable: true
              required:
                - content
      security: []
    get:
      summary: 'List messages in a chat room (optionally paginated).'
      operationId: listMessagesInAChatRoomoptionallyPaginated
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: room_id
        description: 'The ID of the room.'
        example: architecto
        required: true
        schema:
          type: string
  /api/v1/countries:
    get:
      summary: ''
      operationId: getApiV1Countries
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                filter:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    name:
                      type: string
                      description: ''
                      example: architecto
                      nullable: false
                    code:
                      type: string
                      description: 'Must be 2 characters.'
                      example: ng
                      nullable: false
                    code3:
                      type: string
                      description: 'Must be 3 characters.'
                      example: zmi
                      nullable: false
                    numericCode:
                      type: string
                      description: ''
                      example: architecto
                      nullable: false
                    phoneCode:
                      type: string
                      description: ''
                      example: architecto
                      nullable: false
                    capital:
                      type: string
                      description: ''
                      example: architecto
                      nullable: false
                    currency:
                      type: string
                      description: ''
                      example: architecto
                      nullable: false
                    currencyCode:
                      type: string
                      description: ''
                      example: architecto
                      nullable: false
                    currencySymbol:
                      type: string
                      description: ''
                      example: architecto
                      nullable: false
                    tld:
                      type: string
                      description: ''
                      example: architecto
                      nullable: false
                    native:
                      type: string
                      description: ''
                      example: architecto
                      nullable: false
                    region:
                      type: string
                      description: ''
                      example: architecto
                      nullable: false
                    subregion:
                      type: string
                      description: ''
                      example: architecto
                      nullable: false
                    emoji:
                      type: string
                      description: ''
                      example: architecto
                      nullable: false
                    emojiU:
                      type: string
                      description: ''
                      example: architecto
                      nullable: false
                    createdAt:
                      type: object
                      description: ''
                      example: null
                      nullable: false
                      properties:
                        from:
                          type: string
                          description: 'This field is required when <code>filter.createdAt</code> is present. Must be a valid date.'
                          example: '2025-06-05T07:09:33'
                          nullable: false
                        to:
                          type: string
                          description: 'This field is required when <code>filter.createdAt</code> is present. Must be a valid date. Must be a date after or equal to <code>filter.createdAt.from</code>.'
                          example: '2051-06-29'
                          nullable: false
                    updatedAt:
                      type: object
                      description: ''
                      example: null
                      nullable: false
                      properties:
                        from:
                          type: string
                          description: 'This field is required when <code>filter.updatedAt</code> is present. Must be a valid date.'
                          example: '2025-06-05T07:09:33'
                          nullable: false
                        to:
                          type: string
                          description: 'This field is required when <code>filter.updatedAt</code> is present. Must be a valid date. Must be a date after or equal to <code>filter.updatedAt.from</code>.'
                          example: '2051-06-29'
                          nullable: false
                sort:
                  type: string
                  description: ''
                  example: numericCode
                  nullable: false
                  enum:
                    - name
                    - '-name'
                    - code
                    - '-code'
                    - code3
                    - '-code3'
                    - numericCode
                    - '-numericCode'
                    - phoneCode
                    - '-phoneCode'
                    - capital
                    - '-capital'
                    - currency
                    - '-currency'
                    - currencyCode
                    - '-currencyCode'
                    - region
                    - '-region'
                    - subregion
                    - '-subregion'
                    - createdAt
                    - '-createdAt'
                    - updatedAt
                    - '-updatedAt'
      security: []
  '/api/v1/countries/{id}':
    get:
      summary: ''
      operationId: getApiV1CountriesId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the country.'
        example: 01973b12-a5c9-73b2-afbc-3c80a8b73a29
        required: true
        schema:
          type: string
  /api/v1/users:
    get:
      summary: ''
      operationId: getApiV1Users
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/v1/users/{id}':
    get:
      summary: ''
      operationId: getApiV1UsersId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: efb6c5e5-f708-5a9e-89d8-c9963afd4ff8
        required: true
        schema:
          type: string
  /api/v1/projects:
    get:
      summary: ''
      operationId: getApiV1Projects
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiV1Projects
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: b
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Eius et animi quos velit et.'
                  nullable: true
                statusId:
                  type: string
                  description: 'Must be a valid UUID. The <code>id</code> of an existing record in the project_statuses table.'
                  example: 21c4122b-d554-3723-966c-6d723ea5293f
                  nullable: false
                startDate:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-06-05T07:09:33'
                  nullable: true
                endDate:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-06-05T07:09:33'
                  nullable: true
              required:
                - name
                - statusId
      security: []
  '/api/v1/projects/{id}':
    get:
      summary: ''
      operationId: getApiV1ProjectsId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiV1ProjectsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: b
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Eius et animi quos velit et.'
                  nullable: true
                statusId:
                  type: string
                  description: 'Must be a valid UUID. The <code>id</code> of an existing record in the project_statuses table.'
                  example: 21c4122b-d554-3723-966c-6d723ea5293f
                  nullable: false
                startDate:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-06-05T07:09:33'
                  nullable: true
                endDate:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-06-05T07:09:33'
                  nullable: true
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1ProjectsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the project.'
        example: architecto
        required: true
        schema:
          type: string
  /api/v1/project-statuses:
    get:
      summary: ''
      operationId: getApiV1ProjectStatuses
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                filter:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    name:
                      type: string
                      description: ''
                      example: architecto
                      nullable: false
                    isDefault:
                      type: boolean
                      description: ''
                      example: false
                      nullable: false
                    createdAt:
                      type: object
                      description: ''
                      example: null
                      nullable: false
                      properties: {  }
                    updatedAt:
                      type: object
                      description: ''
                      example: null
                      nullable: false
                      properties: {  }
                sort:
                  type: string
                  description: ''
                  example: architecto
                  nullable: false
                per_page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 22
                  nullable: false
      security: []
    post:
      summary: ''
      operationId: postApiV1ProjectStatuses
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: b
                  nullable: false
                color:
                  type: string
                  description: 'Must not be greater than 7 characters.'
                  example: ngzmiyv
                  nullable: false
                sortOrder:
                  type: integer
                  description: ''
                  example: 16
                  nullable: false
                isDefault:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
              required:
                - name
                - color
      security: []
  '/api/v1/project-statuses/{id}':
    get:
      summary: ''
      operationId: getApiV1ProjectStatusesId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiV1ProjectStatusesId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: b
                  nullable: false
                color:
                  type: string
                  description: 'Must not be greater than 7 characters.'
                  example: ngzmiyv
                  nullable: false
                sortOrder:
                  type: integer
                  description: ''
                  example: 16
                  nullable: false
                isDefault:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
              required:
                - name
                - color
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1ProjectStatusesId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the project status.'
        example: architecto
        required: true
        schema:
          type: string
  /api/v1/tasks:
    get:
      summary: ''
      operationId: getApiV1Tasks
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiV1Tasks
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                projectId:
                  type: string
                  description: 'Must be a valid UUID. The <code>id</code> of an existing record in the projects table.'
                  example: 6ff8f7f6-1eb3-3525-be4a-3932c805afed
                  nullable: false
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: g
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Eius et animi quos velit et.'
                  nullable: true
                statusId:
                  type: string
                  description: 'Must be a valid UUID. The <code>id</code> of an existing record in the task_statuses table.'
                  example: 21c4122b-d554-3723-966c-6d723ea5293f
                  nullable: false
                priority:
                  type: string
                  description: ''
                  example: architecto
                  nullable: true
                assignedToId:
                  type: string
                  description: 'Must be a valid UUID. The <code>id</code> of an existing record in the users table.'
                  example: a4855dc5-0acb-33c3-b921-f4291f719ca0
                  nullable: true
                dueDate:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-06-05T07:09:33'
                  nullable: true
              required:
                - projectId
                - title
                - statusId
      security: []
  '/api/v1/tasks/{id}':
    get:
      summary: ''
      operationId: getApiV1TasksId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiV1TasksId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: b
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Eius et animi quos velit et.'
                  nullable: true
                statusId:
                  type: string
                  description: 'Must be a valid UUID. The <code>id</code> of an existing record in the task_statuses table.'
                  example: 21c4122b-d554-3723-966c-6d723ea5293f
                  nullable: false
                priority:
                  type: string
                  description: ''
                  example: architecto
                  nullable: true
                assignedToId:
                  type: string
                  description: 'Must be a valid UUID. The <code>id</code> of an existing record in the users table.'
                  example: a4855dc5-0acb-33c3-b921-f4291f719ca0
                  nullable: true
                dueDate:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-06-05T07:09:33'
                  nullable: true
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1TasksId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the task.'
        example: architecto
        required: true
        schema:
          type: string
  /api/v1/task-statuses:
    get:
      summary: ''
      operationId: getApiV1TaskStatuses
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                filter:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    name:
                      type: string
                      description: ''
                      example: architecto
                      nullable: false
                    isDefault:
                      type: boolean
                      description: ''
                      example: false
                      nullable: false
                    createdAt:
                      type: object
                      description: ''
                      example: null
                      nullable: false
                      properties: {  }
                    updatedAt:
                      type: object
                      description: ''
                      example: null
                      nullable: false
                      properties: {  }
                sort:
                  type: string
                  description: ''
                  example: architecto
                  nullable: false
                per_page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 22
                  nullable: false
      security: []
    post:
      summary: ''
      operationId: postApiV1TaskStatuses
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: b
                  nullable: false
                color:
                  type: string
                  description: 'Must not be greater than 7 characters.'
                  example: ngzmiyv
                  nullable: false
                sortOrder:
                  type: integer
                  description: ''
                  example: 16
                  nullable: false
                isDefault:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
              required:
                - name
                - color
      security: []
  '/api/v1/task-statuses/{id}':
    get:
      summary: ''
      operationId: getApiV1TaskStatusesId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiV1TaskStatusesId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: b
                  nullable: false
                color:
                  type: string
                  description: 'Must not be greater than 7 characters.'
                  example: ngzmiyv
                  nullable: false
                sortOrder:
                  type: integer
                  description: ''
                  example: 16
                  nullable: false
                isDefault:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
              required:
                - name
                - color
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1TaskStatusesId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the task status.'
        example: 16
        required: true
        schema:
          type: integer
  '/api/v1/projects/{project_id}/attachments':
    get:
      summary: ''
      operationId: getApiV1ProjectsProject_idAttachments
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiV1ProjectsProject_idAttachments
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: 'Must be a file. Must not be greater than 10240 kilobytes.'
                  nullable: false
              required:
                - file
      security: []
    parameters:
      -
        in: path
        name: project_id
        description: 'The ID of the project.'
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/projects/{project_id}/attachments/{media_id}':
    get:
      summary: ''
      operationId: getApiV1ProjectsProject_idAttachmentsMedia_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1ProjectsProject_idAttachmentsMedia_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: project_id
        description: 'The ID of the project.'
        example: architecto
        required: true
        schema:
          type: string
      -
        in: path
        name: media_id
        description: 'The ID of the media.'
        example: 1973
        required: true
        schema:
          type: integer
  '/api/v1/projects/{project_id}/attachments/{media_id}/download':
    get:
      summary: ''
      operationId: getApiV1ProjectsProject_idAttachmentsMedia_idDownload
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: project_id
        description: 'The ID of the project.'
        example: architecto
        required: true
        schema:
          type: string
      -
        in: path
        name: media_id
        description: 'The ID of the media.'
        example: 1973
        required: true
        schema:
          type: integer
  '/api/v1/projects/{project_id}/attachments/{media_id}/preview':
    get:
      summary: ''
      operationId: getApiV1ProjectsProject_idAttachmentsMedia_idPreview
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: project_id
        description: 'The ID of the project.'
        example: architecto
        required: true
        schema:
          type: string
      -
        in: path
        name: media_id
        description: 'The ID of the media.'
        example: 1973
        required: true
        schema:
          type: integer
  '/api/v1/tasks/{task_id}/attachments':
    get:
      summary: ''
      operationId: getApiV1TasksTask_idAttachments
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiV1TasksTask_idAttachments
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: 'Must be a file. Must not be greater than 10240 kilobytes.'
                  nullable: false
              required:
                - file
      security: []
    parameters:
      -
        in: path
        name: task_id
        description: 'The ID of the task.'
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/tasks/{task_id}/attachments/{media_id}':
    get:
      summary: ''
      operationId: getApiV1TasksTask_idAttachmentsMedia_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1TasksTask_idAttachmentsMedia_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: task_id
        description: 'The ID of the task.'
        example: architecto
        required: true
        schema:
          type: string
      -
        in: path
        name: media_id
        description: 'The ID of the media.'
        example: 1973
        required: true
        schema:
          type: integer
  '/api/v1/tasks/{task_id}/attachments/{media_id}/download':
    get:
      summary: ''
      operationId: getApiV1TasksTask_idAttachmentsMedia_idDownload
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: task_id
        description: 'The ID of the task.'
        example: architecto
        required: true
        schema:
          type: string
      -
        in: path
        name: media_id
        description: 'The ID of the media.'
        example: 1973
        required: true
        schema:
          type: integer
  '/api/v1/tasks/{task_id}/attachments/{media_id}/preview':
    get:
      summary: ''
      operationId: getApiV1TasksTask_idAttachmentsMedia_idPreview
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: task_id
        description: 'The ID of the task.'
        example: architecto
        required: true
        schema:
          type: string
      -
        in: path
        name: media_id
        description: 'The ID of the media.'
        example: 1973
        required: true
        schema:
          type: integer
  /api/v1/contractors:
    get:
      summary: ''
      operationId: getApiV1Contractors
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                filter:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    name:
                      type: string
                      description: ''
                      example: null
                      nullable: false
                    email:
                      type: string
                      description: ''
                      example: null
                      nullable: false
                    phone:
                      type: string
                      description: ''
                      example: null
                      nullable: false
                    address:
                      type: string
                      description: ''
                      example: null
                      nullable: false
                    city:
                      type: string
                      description: ''
                      example: null
                      nullable: false
                    state:
                      type: string
                      description: ''
                      example: null
                      nullable: false
                    zipCode:
                      type: string
                      description: ''
                      example: null
                      nullable: false
                    country:
                      type: string
                      description: ''
                      example: null
                      nullable: false
                    taxId:
                      type: string
                      description: ''
                      example: null
                      nullable: false
                    notes:
                      type: string
                      description: ''
                      example: null
                      nullable: false
                    isActive:
                      type: string
                      description: ''
                      example: null
                      nullable: false
                    createdAt:
                      type: string
                      description: ''
                      example: null
                      nullable: false
                    updatedAt:
                      type: string
                      description: ''
                      example: null
                      nullable: false
                sort:
                  type: string
                  description: ''
                  example: '-updatedAt'
                  nullable: false
                  enum:
                    - name
                    - '-name'
                    - email
                    - '-email'
                    - city
                    - '-city'
                    - country
                    - '-country'
                    - isActive
                    - '-isActive'
                    - createdAt
                    - '-createdAt'
                    - updatedAt
                    - '-updatedAt'
      security: []
    post:
      summary: ''
      operationId: postApiV1Contractors
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                contractor:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    tenantId:
                      type: string
                      description: 'Must be a valid UUID. The <code>id</code> of an existing record in the tenants table.'
                      example: 6ff8f7f6-1eb3-3525-be4a-3932c805afed
                      nullable: false
                    name:
                      type: string
                      description: 'Must not be greater than 255 characters.'
                      example: g
                      nullable: false
                    email:
                      type: string
                      description: 'Must be a valid email address. Must not be greater than 255 characters.'
                      example: rowan.gulgowski@example.com
                      nullable: true
                    phone:
                      type: string
                      description: 'Must not be greater than 20 characters.'
                      example: dljnikhwaykcmyuw
                      nullable: true
                    website:
                      type: string
                      description: 'Must not be greater than 255 characters.'
                      example: p
                      nullable: true
                    country:
                      type: string
                      description: 'Must not be greater than 100 characters.'
                      example: w
                      nullable: true
                    vatId:
                      type: string
                      description: 'Must not be greater than 20 characters.'
                      example: lvqwrsitcpscqldz
                      nullable: true
                    taxId:
                      type: string
                      description: 'Must not be greater than 20 characters.'
                      example: snrwtujwvlxjklqp
                      nullable: true
                    regon:
                      type: string
                      description: 'Must not be greater than 20 characters.'
                      example: pwqbewtnnoqitpxn
                      nullable: true
                    description:
                      type: string
                      description: ''
                      example: 'Eius et animi quos velit et.'
                      nullable: true
                    isActive:
                      type: boolean
                      description: ''
                      example: false
                      nullable: false
                    isBuyer:
                      type: boolean
                      description: ''
                      example: false
                      nullable: false
                    isSupplier:
                      type: boolean
                      description: ''
                      example: true
                      nullable: false
                  required:
                    - tenantId
                    - name
                address:
                  type: object
                  description: ''
                  example: null
                  nullable: true
                  properties: {  }
                bankAccount:
                  type: object
                  description: ''
                  example: null
                  nullable: true
                  properties: {  }
                options:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    fetchLogo:
                      type: boolean
                      description: ''
                      example: false
                      nullable: true
                registryConfirmation:
                  type: object
                  description: ''
                  example: null
                  nullable: true
                  properties:
                    mf:
                      type: boolean
                      description: ''
                      example: true
                      nullable: true
                    vies:
                      type: boolean
                      description: ''
                      example: true
                      nullable: true
                    regon:
                      type: boolean
                      description: ''
                      example: true
                      nullable: true
      security: []
  '/api/v1/contractors/{id}':
    get:
      summary: ''
      operationId: getApiV1ContractorsId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiV1ContractorsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                contractor:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    tenantId:
                      type: string
                      description: 'Must be a valid UUID. The <code>id</code> of an existing record in the tenants table.'
                      example: 6ff8f7f6-1eb3-3525-be4a-3932c805afed
                      nullable: false
                    name:
                      type: string
                      description: 'Must not be greater than 255 characters.'
                      example: g
                      nullable: false
                    email:
                      type: string
                      description: 'Must be a valid email address. Must not be greater than 255 characters.'
                      example: rowan.gulgowski@example.com
                      nullable: true
                    phone:
                      type: string
                      description: 'Must not be greater than 20 characters.'
                      example: dljnikhwaykcmyuw
                      nullable: true
                    website:
                      type: string
                      description: 'Must not be greater than 255 characters.'
                      example: p
                      nullable: true
                    country:
                      type: string
                      description: 'Must not be greater than 100 characters.'
                      example: w
                      nullable: true
                    vatId:
                      type: string
                      description: 'Must not be greater than 20 characters.'
                      example: lvqwrsitcpscqldz
                      nullable: true
                    taxId:
                      type: string
                      description: 'Must not be greater than 20 characters.'
                      example: snrwtujwvlxjklqp
                      nullable: true
                    regon:
                      type: string
                      description: 'Must not be greater than 20 characters.'
                      example: pwqbewtnnoqitpxn
                      nullable: true
                    description:
                      type: string
                      description: ''
                      example: 'Eius et animi quos velit et.'
                      nullable: true
                    isActive:
                      type: boolean
                      description: ''
                      example: true
                      nullable: false
                    isBuyer:
                      type: boolean
                      description: ''
                      example: true
                      nullable: false
                    isSupplier:
                      type: boolean
                      description: ''
                      example: true
                      nullable: false
                  required:
                    - tenantId
                    - name
                address:
                  type: object
                  description: ''
                  example: null
                  nullable: true
                  properties: {  }
                bankAccount:
                  type: object
                  description: ''
                  example: null
                  nullable: true
                  properties: {  }
                options:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    fetchLogo:
                      type: boolean
                      description: ''
                      example: true
                      nullable: true
                registryConfirmation:
                  type: object
                  description: ''
                  example: null
                  nullable: true
                  properties:
                    mf:
                      type: boolean
                      description: ''
                      example: true
                      nullable: true
                    vies:
                      type: boolean
                      description: ''
                      example: false
                      nullable: true
                    regon:
                      type: boolean
                      description: ''
                      example: false
                      nullable: true
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1ContractorsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the contractor.'
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/contractors/{contractor_id}/logo':
    post:
      summary: ''
      operationId: postApiV1ContractorsContractor_idLogo
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: false
              required:
                - image
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1ContractorsContractor_idLogo
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: contractor_id
        description: 'The ID of the contractor.'
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/contractors/{contractor_id}/addresses':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                country:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: b
                  nullable: false
                postalCode:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: ngzmiyvdljnikhwa
                  nullable: true
                city:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: 'y'
                  nullable: false
                street:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: k
                  nullable: true
                building:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: cmyuwpwlvqwrsitc
                  nullable: true
                flat:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: pscqldzsnrwtujwv
                  nullable: true
                description:
                  type: string
                  description: 'Must not be greater than 1000 characters.'
                  example: 'Molestias fugit deleniti distinctio eum doloremque id.'
                  nullable: true
                type:
                  type: string
                  description: ''
                  example: registeredOffice
                  nullable: false
                  enum:
                    - residence
                    - billing
                    - registeredOffice
                    - correspondence
                    - contact
                isDefault:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
              required:
                - country
                - city
                - type
      security: []
    parameters:
      -
        in: path
        name: contractor_id
        description: 'The ID of the contractor.'
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/contractors/{contractor_id}/addresses/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                country:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: b
                  nullable: false
                postalCode:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: ngzmiyvdljnikhwa
                  nullable: true
                city:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: 'y'
                  nullable: false
                street:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: k
                  nullable: true
                building:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: cmyuwpwlvqwrsitc
                  nullable: true
                flat:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: pscqldzsnrwtujwv
                  nullable: true
                description:
                  type: string
                  description: 'Must not be greater than 1000 characters.'
                  example: 'Molestias fugit deleniti distinctio eum doloremque id.'
                  nullable: true
                type:
                  type: string
                  description: ''
                  example: residence
                  nullable: false
                  enum:
                    - residence
                    - billing
                    - registeredOffice
                    - correspondence
                    - contact
                isDefault:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
              required:
                - country
                - city
                - type
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: contractor_id
        description: 'The ID of the contractor.'
        example: architecto
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the address.'
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/contractors/{contractor_id}/addresses/{contractorAddress}/set-default':
    post:
      summary: ''
      operationId: postApiV1ContractorsContractor_idAddressesContractorAddressSetDefault
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: contractor_id
        description: 'The ID of the contractor.'
        example: architecto
        required: true
        schema:
          type: string
      -
        in: path
        name: contractorAddress
        description: ''
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/contractors/{contractor_id}/bank-accounts':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                iban:
                  type: string
                  description: 'Must not be greater than 50 characters.'
                  example: b
                  nullable: false
                swift:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: ngzmiyvdljnikhwa
                  nullable: true
                bankName:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: 'y'
                  nullable: true
                currency:
                  type: string
                  description: 'Must not be greater than 3 characters.'
                  example: k
                  nullable: true
                description:
                  type: string
                  description: 'Must not be greater than 1000 characters.'
                  example: 'Omnis nostrum aut adipisci quidem nostrum qui commodi.'
                  nullable: true
                isDefault:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
              required:
                - iban
      security: []
    parameters:
      -
        in: path
        name: contractor_id
        description: 'The ID of the contractor.'
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/contractors/{contractor_id}/bank-accounts/{bank_account}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                iban:
                  type: string
                  description: 'Must not be greater than 50 characters.'
                  example: b
                  nullable: false
                swift:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: ngzmiyvdljnikhwa
                  nullable: true
                bankName:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: 'y'
                  nullable: true
                currency:
                  type: string
                  description: 'Must not be greater than 3 characters.'
                  example: k
                  nullable: true
                description:
                  type: string
                  description: 'Must not be greater than 1000 characters.'
                  example: 'Omnis nostrum aut adipisci quidem nostrum qui commodi.'
                  nullable: true
                isDefault:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
              required:
                - iban
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: contractor_id
        description: 'The ID of the contractor.'
        example: architecto
        required: true
        schema:
          type: string
      -
        in: path
        name: bank_account
        description: ''
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/contractors/{contractor_id}/bank-accounts/{bankAccount_id}/set-default':
    post:
      summary: ''
      operationId: postApiV1ContractorsContractor_idBankAccountsBankAccount_idSetDefault
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: contractor_id
        description: 'The ID of the contractor.'
        example: architecto
        required: true
        schema:
          type: string
      -
        in: path
        name: bankAccount_id
        description: 'The ID of the bankAccount.'
        example: 01973b12-a73f-7175-8918-2f404abccad4
        required: true
        schema:
          type: string
  '/api/v1/contractors/{contractor_id}/contacts':
    get:
      summary: ''
      operationId: getApiV1ContractorsContractor_idContacts
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiV1ContractorsContractor_idContacts
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: b
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: zbailey@example.net
                  nullable: true
                phone:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: i
                  nullable: true
                position:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: 'y'
                  nullable: true
                description:
                  type: string
                  description: ''
                  example: 'Eius et animi quos velit et.'
                  nullable: true
              required:
                - name
      security: []
    parameters:
      -
        in: path
        name: contractor_id
        description: 'The ID of the contractor.'
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/contractors/{contractor_id}/contacts/{id}':
    get:
      summary: ''
      operationId: getApiV1ContractorsContractor_idContactsId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiV1ContractorsContractor_idContactsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: b
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: zbailey@example.net
                  nullable: true
                phone:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: i
                  nullable: true
                position:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: 'y'
                  nullable: true
                description:
                  type: string
                  description: ''
                  example: 'Eius et animi quos velit et.'
                  nullable: true
              required:
                - name
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1ContractorsContractor_idContactsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: contractor_id
        description: 'The ID of the contractor.'
        example: architecto
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the contact.'
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/contractors/{contractor_id}/attachments':
    get:
      summary: 'List all attachments for a contractor.'
      operationId: listAllAttachmentsForAContractor
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Upload a new attachment.'
      operationId: uploadANewAttachment
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: 'Must be a file. Must not be greater than 10240 kilobytes.'
                  nullable: false
              required:
                - file
      security: []
    parameters:
      -
        in: path
        name: contractor_id
        description: 'The ID of the contractor.'
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/contractors/{contractor_id}/attachments/{media_id}':
    get:
      summary: 'Show metadata for a single attachment.'
      operationId: showMetadataForASingleAttachment
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: contractor_id
        description: 'The ID of the contractor.'
        example: architecto
        required: true
        schema:
          type: string
      -
        in: path
        name: media_id
        description: 'The ID of the media.'
        example: 1973
        required: true
        schema:
          type: integer
  '/api/v1/contractors/{contractor_id}/attachments/{media_id}/download':
    get:
      summary: 'Download an attachment.'
      operationId: downloadAnAttachment
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: contractor_id
        description: 'The ID of the contractor.'
        example: architecto
        required: true
        schema:
          type: string
      -
        in: path
        name: media_id
        description: 'The ID of the media.'
        example: 1973
        required: true
        schema:
          type: integer
  '/api/v1/contractors/{contractor_id}/attachments/{media_id}/preview':
    get:
      summary: 'Preview an attachment (inline).'
      operationId: previewAnAttachmentinline
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: contractor_id
        description: 'The ID of the contractor.'
        example: architecto
        required: true
        schema:
          type: string
      -
        in: path
        name: media_id
        description: 'The ID of the media.'
        example: 1973
        required: true
        schema:
          type: integer
  '/api/v1/contractors/{contractor_id}/attachments/{media}':
    delete:
      summary: 'Delete an attachment.'
      operationId: deleteAnAttachment
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: contractor_id
        description: 'The ID of the contractor.'
        example: architecto
        required: true
        schema:
          type: string
      -
        in: path
        name: media
        description: ''
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/contractors/{contractor_id}/tags':
    get:
      summary: ''
      operationId: getApiV1ContractorsContractor_idTags
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiV1ContractorsContractor_idTags
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tag:
                  type: string
                  description: 'Must not be greater than 64 characters.'
                  example: b
                  nullable: false
                tags:
                  type: array
                  description: 'Must not be greater than 64 characters.'
                  example:
                    - 'n'
                  items:
                    type: string
              required:
                - tag
      security: []
    patch:
      summary: ''
      operationId: patchApiV1ContractorsContractor_idTags
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tag:
                  type: string
                  description: 'Must not be greater than 64 characters.'
                  example: b
                  nullable: false
                tags:
                  type: array
                  description: 'Must not be greater than 64 characters.'
                  example:
                    - 'n'
                  items:
                    type: string
              required:
                - tag
      security: []
    parameters:
      -
        in: path
        name: contractor_id
        description: 'The ID of the contractor.'
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/contractors/{contractor_id}/tags/{id}':
    delete:
      summary: ''
      operationId: deleteApiV1ContractorsContractor_idTagsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: contractor_id
        description: 'The ID of the contractor.'
        example: architecto
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the tag.'
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/contractors/{contractor_id}/comments':
    get:
      summary: ''
      operationId: getApiV1ContractorsContractor_idComments
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiV1ContractorsContractor_idComments
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: ''
                  example: architecto
                  nullable: false
              required:
                - content
      security: []
    parameters:
      -
        in: path
        name: contractor_id
        description: 'The ID of the contractor.'
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/contractors/{contractor_id}/comments/{id}':
    get:
      summary: ''
      operationId: getApiV1ContractorsContractor_idCommentsId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiV1ContractorsContractor_idCommentsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: ''
                  example: architecto
                  nullable: false
              required:
                - content
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1ContractorsContractor_idCommentsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: contractor_id
        description: 'The ID of the contractor.'
        example: architecto
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the comment.'
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/contractors/{contractor_id}/logs':
    get:
      summary: ''
      operationId: getApiV1ContractorsContractor_idLogs
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: contractor_id
        description: 'The ID of the contractor.'
        example: architecto
        required: true
        schema:
          type: string
  /api/v1/products:
    get:
      summary: ''
      operationId: getApiV1Products
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                filter:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    name:
                      type: string
                      description: ''
                      example: null
                      nullable: false
                    description:
                      type: string
                      description: ''
                      example: null
                      nullable: false
                    unitId:
                      type: string
                      description: 'Must be a valid UUID. The <code>id</code> of an existing record in the measurement_units table.'
                      example: 6ff8f7f6-1eb3-3525-be4a-3932c805afed
                      nullable: false
                    vatRateId:
                      type: string
                      description: 'Must be a valid UUID. The <code>id</code> of an existing record in the vat_rates table.'
                      example: 6b72fe4a-5b40-307c-bc24-f79acf9a1bb9
                      nullable: false
                    createdAt:
                      type: string
                      description: ''
                      example: null
                      nullable: false
                    updatedAt:
                      type: string
                      description: ''
                      example: null
                      nullable: false
                sort:
                  type: string
                  description: ''
                  example: '-name'
                  nullable: false
                  enum:
                    - name
                    - '-name'
                    - createdAt
                    - '-createdAt'
                    - updatedAt
                    - '-updatedAt'
      security: []
    post:
      summary: ''
      operationId: postApiV1Products
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tenantId:
                  type: string
                  description: 'Must be a valid UUID. The <code>id</code> of an existing record in the tenants table.'
                  example: 6ff8f7f6-1eb3-3525-be4a-3932c805afed
                  nullable: false
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: g
                  nullable: false
                description:
                  type: string
                  description: 'Must not be greater than 1000 characters.'
                  example: 'Quos velit et fugiat sunt nihil accusantium harum.'
                  nullable: true
                unitId:
                  type: string
                  description: 'Must be a valid UUID. The <code>id</code> of an existing record in the measurement_units table.'
                  example: cd1eb1ea-4697-3b9a-9dd0-988044a83af6
                  nullable: true
                priceNet:
                  type: number
                  description: 'Must be at least 0. Must not be greater than 999999.99.'
                  example: 14
                  nullable: false
                vatRateId:
                  type: string
                  description: 'Must be a valid UUID. The <code>id</code> of an existing record in the vat_rates table.'
                  example: d207102d-bce0-31f9-8c36-aa9cf4cfe75a
                  nullable: true
              required:
                - tenantId
                - name
                - priceNet
      security: []
  '/api/v1/products/{id}':
    get:
      summary: ''
      operationId: getApiV1ProductsId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiV1ProductsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tenantId:
                  type: string
                  description: 'Must be a valid UUID. The <code>id</code> of an existing record in the tenants table.'
                  example: 6ff8f7f6-1eb3-3525-be4a-3932c805afed
                  nullable: false
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: g
                  nullable: false
                description:
                  type: string
                  description: 'Must not be greater than 1000 characters.'
                  example: 'Quos velit et fugiat sunt nihil accusantium harum.'
                  nullable: true
                unitId:
                  type: string
                  description: 'Must be a valid UUID. The <code>id</code> of an existing record in the measurement_units table.'
                  example: cd1eb1ea-4697-3b9a-9dd0-988044a83af6
                  nullable: true
                priceNet:
                  type: number
                  description: 'Must be at least 0. Must not be greater than 999999.99.'
                  example: 14
                  nullable: false
                vatRateId:
                  type: string
                  description: 'Must be a valid UUID. The <code>id</code> of an existing record in the vat_rates table.'
                  example: d207102d-bce0-31f9-8c36-aa9cf4cfe75a
                  nullable: true
              required:
                - tenantId
                - name
                - priceNet
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1ProductsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the product.'
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/products/{product_id}/logo':
    post:
      summary: ''
      operationId: postApiV1ProductsProduct_idLogo
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: false
              required:
                - image
      security: []
    get:
      summary: ''
      operationId: getApiV1ProductsProduct_idLogo
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1ProductsProduct_idLogo
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: product_id
        description: 'The ID of the product.'
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/products/{product_id}/attachments':
    get:
      summary: 'List all attachments for a product.'
      operationId: listAllAttachmentsForAProduct
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Upload a new attachment.'
      operationId: uploadANewAttachment
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: 'Must be a file. Must not be greater than 10240 kilobytes.'
                  nullable: false
              required:
                - file
      security: []
    parameters:
      -
        in: path
        name: product_id
        description: 'The ID of the product.'
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/products/{product_id}/attachments/{media}':
    get:
      summary: 'Show metadata for a single attachment.'
      operationId: showMetadataForASingleAttachment
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Delete an attachment.'
      operationId: deleteAnAttachment
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: product_id
        description: 'The ID of the product.'
        example: architecto
        required: true
        schema:
          type: string
      -
        in: path
        name: media
        description: ''
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/products/{product_id}/tags':
    get:
      summary: ''
      operationId: getApiV1ProductsProduct_idTags
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiV1ProductsProduct_idTags
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tag:
                  type: string
                  description: 'Must not be greater than 64 characters.'
                  example: b
                  nullable: false
                tags:
                  type: array
                  description: 'Must not be greater than 64 characters.'
                  example:
                    - 'n'
                  items:
                    type: string
              required:
                - tag
      security: []
    patch:
      summary: ''
      operationId: patchApiV1ProductsProduct_idTags
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tag:
                  type: string
                  description: 'Must not be greater than 64 characters.'
                  example: b
                  nullable: false
                tags:
                  type: array
                  description: 'Must not be greater than 64 characters.'
                  example:
                    - 'n'
                  items:
                    type: string
              required:
                - tag
      security: []
    parameters:
      -
        in: path
        name: product_id
        description: 'The ID of the product.'
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/products/{product_id}/tags/{id}':
    delete:
      summary: ''
      operationId: deleteApiV1ProductsProduct_idTagsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: product_id
        description: 'The ID of the product.'
        example: architecto
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the tag.'
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/products/{product_id}/comments':
    get:
      summary: ''
      operationId: getApiV1ProductsProduct_idComments
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiV1ProductsProduct_idComments
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: 'Must not be greater than 1000 characters.'
                  example: b
                  nullable: false
              required:
                - content
      security: []
    parameters:
      -
        in: path
        name: product_id
        description: 'The ID of the product.'
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/products/{product_id}/comments/{id}':
    get:
      summary: ''
      operationId: getApiV1ProductsProduct_idCommentsId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiV1ProductsProduct_idCommentsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: 'Must not be greater than 1000 characters.'
                  example: b
                  nullable: false
              required:
                - content
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1ProductsProduct_idCommentsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: product_id
        description: 'The ID of the product.'
        example: architecto
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the comment.'
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/products/{product_id}/logs':
    get:
      summary: ''
      operationId: getApiV1ProductsProduct_idLogs
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: product_id
        description: 'The ID of the product.'
        example: architecto
        required: true
        schema:
          type: string
  /api/v1/subscription-plans:
    get:
      summary: ''
      operationId: getApiV1SubscriptionPlans
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/v1/subscription-plans/{id}':
    get:
      summary: ''
      operationId: getApiV1SubscriptionPlansId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the subscription plan.'
        example: architecto
        required: true
        schema:
          type: string
  /api/v1/subscriptions:
    get:
      summary: ''
      operationId: getApiV1Subscriptions
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiV1Subscriptions
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                planId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the subscription_plans table.'
                  example: architecto
                  nullable: false
                billingInterval:
                  type: string
                  description: ''
                  example: yearly
                  nullable: false
                  enum:
                    - monthly
                    - quarterly
                    - yearly
                paymentDetails:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    cardNumber:
                      type: string
                      description: 'Must match the regex /^\d{16}$/.'
                      example: '5642559314232682'
                      nullable: false
                    expiry:
                      type: string
                      description: 'Must match the regex /^\d{2}\/\d{2}$/.'
                      example: 64/25
                      nullable: false
                    cvc:
                      type: string
                      description: 'Must match the regex /^\d{3,4}$/.'
                      example: '564'
                      nullable: false
                    name:
                      type: string
                      description: 'Must not be greater than 255 characters.'
                      example: 'y'
                      nullable: false
                  required:
                    - cardNumber
                    - expiry
                    - cvc
                    - name
                trialEndsAt:
                  type: string
                  description: 'Must be a valid date. Must be a date after <code>now</code>.'
                  example: '2051-06-29'
                  nullable: true
                couponCode:
                  type: string
                  description: 'Must not be greater than 50 characters.'
                  example: 'n'
                  nullable: true
                metadata:
                  type: array
                  description: ''
                  example:
                    - architecto
                  items:
                    type: string
              required:
                - planId
                - billingInterval
                - paymentDetails
      security: []
  '/api/v1/subscriptions/{id}':
    get:
      summary: ''
      operationId: getApiV1SubscriptionsId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiV1SubscriptionsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                planId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the subscription_plans table.'
                  example: null
                  nullable: false
                billingInterval:
                  type: string
                  description: ''
                  example: quarterly
                  nullable: false
                  enum:
                    - monthly
                    - quarterly
                    - yearly
                paymentMethodId:
                  type: string
                  description: ''
                  example: architecto
                  nullable: false
                prorate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                cancelAtPeriodEnd:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                metadata:
                  type: array
                  description: ''
                  example:
                    - architecto
                  items:
                    type: string
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1SubscriptionsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                at_period_end:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the subscription.'
        example: architecto
        required: true
        schema:
          type: string
  /api/v1/subscription/checkout:
    post:
      summary: 'Create a Stripe Checkout session for subscription.'
      operationId: createAStripeCheckoutSessionForSubscription
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                billableType:
                  type: string
                  description: ''
                  example: user
                  nullable: false
                  enum:
                    - tenant
                    - user
                planId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the subscription_plans table.'
                  example: architecto
                  nullable: false
                priceId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the billing_prices table.'
                  example: architecto
                  nullable: false
                successUrl:
                  type: string
                  description: 'Must be a valid URL.'
                  example: 'http://bailey.com/'
                  nullable: true
                cancelUrl:
                  type: string
                  description: 'Must be a valid URL.'
                  example: 'http://rempel.com/sunt-nihil-accusantium-harum-mollitia'
                  nullable: true
              required:
                - billableType
                - planId
                - priceId
      security: []
  /api/v1/addon-packages:
    get:
      summary: ''
      operationId: getApiV1AddonPackages
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/v1/addon-packages/{id}':
    get:
      summary: ''
      operationId: getApiV1AddonPackagesId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the addon package.'
        example: architecto
        required: true
        schema:
          type: string
  /api/v1/addon-purchases:
    get:
      summary: ''
      operationId: getApiV1AddonPurchases
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiV1AddonPurchases
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                addonId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the addon_packages table.'
                  example: architecto
                  nullable: false
                quantity:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 22
                  nullable: false
                paymentMethodId:
                  type: string
                  description: ''
                  example: architecto
                  nullable: false
                metadata:
                  type: array
                  description: ''
                  example:
                    - architecto
                  items:
                    type: string
              required:
                - addonId
                - quantity
                - paymentMethodId
      security: []
  '/api/v1/addon-purchases/{id}':
    get:
      summary: ''
      operationId: getApiV1AddonPurchasesId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the addon purchase.'
        example: architecto
        required: true
        schema:
          type: string
  /api/v1/subscription-invoices:
    get:
      summary: ''
      operationId: getApiV1SubscriptionInvoices
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/v1/subscription-invoices/{id}':
    get:
      summary: ''
      operationId: getApiV1SubscriptionInvoicesId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the subscription invoice.'
        example: architecto
        required: true
        schema:
          type: string
  /api/v1/tags:
    get:
      summary: ''
      operationId: getApiV1Tags
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/invoices:
    get:
      summary: ''
      operationId: getApiV1Invoices
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiV1Invoices
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: advance-payment
                  nullable: false
                  enum:
                    - basic
                    - basic-correction
                    - advance-payment
                    - advance-payment-correction
                    - export
                    - export-correction
                    - settlement
                    - settlement-correction
                    - proforma
                    - ue
                    - ue-correction
                    - debit-note
                    - debit-note-correction
                    - import
                    - import-correction
                issue_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-06-05T07:09:34'
                  nullable: false
                status:
                  type: string
                  description: ''
                  example: architecto
                  nullable: false
                number:
                  type: string
                  description: ''
                  example: architecto
                  nullable: false
                numbering_template_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the numbering_templates table.'
                  example: architecto
                  nullable: false
                total_net:
                  type: number
                  description: ''
                  example: 4326.41688
                  nullable: false
                total_tax:
                  type: number
                  description: ''
                  example: 4326.41688
                  nullable: false
                total_gross:
                  type: number
                  description: ''
                  example: 4326.41688
                  nullable: false
                currency:
                  type: string
                  description: 'Must be 3 characters.'
                  example: miy
                  nullable: false
                exchange_rate:
                  type: number
                  description: ''
                  example: 4326.41688
                  nullable: false
                seller:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
                buyer:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
                data:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
                payment:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
                options:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - type
                - issue_date
                - status
                - number
                - numbering_template_id
                - total_net
                - total_tax
                - total_gross
                - currency
                - exchange_rate
                - seller
                - buyer
                - data
                - payment
                - options
      security: []
  '/api/v1/invoices/{id}':
    get:
      summary: ''
      operationId: getApiV1InvoicesId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiV1InvoicesId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: basic-correction
                  nullable: false
                  enum:
                    - basic
                    - basic-correction
                    - advance-payment
                    - advance-payment-correction
                    - export
                    - export-correction
                    - settlement
                    - settlement-correction
                    - proforma
                    - ue
                    - ue-correction
                    - debit-note
                    - debit-note-correction
                    - import
                    - import-correction
                issue_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-06-05T07:09:34'
                  nullable: false
                status:
                  type: string
                  description: ''
                  example: architecto
                  nullable: false
                number:
                  type: string
                  description: ''
                  example: architecto
                  nullable: false
                numbering_template_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the numbering_templates table.'
                  example: architecto
                  nullable: false
                total_net:
                  type: number
                  description: ''
                  example: 4326.41688
                  nullable: false
                total_tax:
                  type: number
                  description: ''
                  example: 4326.41688
                  nullable: false
                total_gross:
                  type: number
                  description: ''
                  example: 4326.41688
                  nullable: false
                currency:
                  type: string
                  description: 'Must be 3 characters.'
                  example: miy
                  nullable: false
                exchange_rate:
                  type: number
                  description: ''
                  example: 4326.41688
                  nullable: false
                seller:
                  type: object
                  description: ''
                  example: null
                  nullable: false
                  properties: {  }
                buyer:
                  type: object
                  description: ''
                  example: null
                  nullable: false
                  properties: {  }
                data:
                  type: object
                  description: ''
                  example: null
                  nullable: false
                  properties: {  }
                payment:
                  type: object
                  description: ''
                  example: null
                  nullable: false
                  properties: {  }
                options:
                  type: object
                  description: ''
                  example: null
                  nullable: false
                  properties: {  }
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1InvoicesId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the invoice.'
        example: architecto
        required: true
        schema:
          type: string
  /api/v1/events:
    get:
      summary: ''
      operationId: getApiV1Events
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiV1Events
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: b
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Eius et animi quos velit et.'
                  nullable: true
                startAt:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-06-05T07:09:34'
                  nullable: false
                endAt:
                  type: string
                  description: 'Must be a valid date. Must be a date after <code>start_at</code>.'
                  example: '2077-03-01'
                  nullable: false
                isAllDay:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                location:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: g
                  nullable: true
                color:
                  type: string
                  description: 'Must not be greater than 50 characters.'
                  example: z
                  nullable: true
                status:
                  type: string
                  description: ''
                  example: completed
                  nullable: false
                  enum:
                    - scheduled
                    - cancelled
                    - completed
                    - tentative
                visibility:
                  type: string
                  description: ''
                  example: private
                  nullable: false
                  enum:
                    - public
                    - private
                timezone:
                  type: string
                  description: 'Must be a valid time zone, such as <code>Africa/Accra</code>.'
                  example: America/La_Paz
                  nullable: false
                recurrenceRule:
                  type: string
                  description: ''
                  example: architecto
                  nullable: true
                reminderSettings:
                  type: object
                  description: ''
                  example: null
                  nullable: true
                  properties:
                    email:
                      type: boolean
                      description: ''
                      example: false
                      nullable: false
                    push:
                      type: boolean
                      description: ''
                      example: true
                      nullable: false
                    remindBefore:
                      type: string
                      description: ''
                      example: architecto
                      nullable: false
                relatedType:
                  type: string
                  description: ''
                  example: architecto
                  nullable: true
                relatedId:
                  type: string
                  description: 'Must be a valid UUID.'
                  example: a4855dc5-0acb-33c3-b921-f4291f719ca0
                  nullable: true
                attendees:
                  type: array
                  description: ''
                  example: null
                  items:
                    type: object
                    properties:
                      attendeeType:
                        type: string
                        description: ''
                        example: architecto
                        nullable: false
                      attendeeId:
                        type: string
                        description: 'Must be a valid UUID.'
                        example: a4855dc5-0acb-33c3-b921-f4291f719ca0
                        nullable: false
                      responseStatus:
                        type: string
                        description: ''
                        example: architecto
                        nullable: false
                      customNote:
                        type: string
                        description: ''
                        example: architecto
                        nullable: true
                    required:
                      - attendeeType
                      - attendeeId
                      - responseStatus
              required:
                - title
                - startAt
                - endAt
                - status
                - visibility
                - timezone
      security: []
  '/api/v1/events/{id}':
    get:
      summary: ''
      operationId: getApiV1EventsId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiV1EventsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: b
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Eius et animi quos velit et.'
                  nullable: true
                startAt:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-06-05T07:09:34'
                  nullable: false
                endAt:
                  type: string
                  description: 'Must be a valid date. Must be a date after <code>start_at</code>.'
                  example: '2077-03-01'
                  nullable: false
                isAllDay:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
                location:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: g
                  nullable: true
                color:
                  type: string
                  description: 'Must not be greater than 50 characters.'
                  example: z
                  nullable: true
                status:
                  type: string
                  description: ''
                  example: completed
                  nullable: false
                  enum:
                    - scheduled
                    - cancelled
                    - completed
                    - tentative
                visibility:
                  type: string
                  description: ''
                  example: private
                  nullable: false
                  enum:
                    - public
                    - private
                timezone:
                  type: string
                  description: 'Must be a valid time zone, such as <code>Africa/Accra</code>.'
                  example: America/La_Paz
                  nullable: false
                recurrenceRule:
                  type: string
                  description: ''
                  example: architecto
                  nullable: true
                reminderSettings:
                  type: object
                  description: ''
                  example: null
                  nullable: true
                  properties:
                    email:
                      type: boolean
                      description: ''
                      example: false
                      nullable: false
                    push:
                      type: boolean
                      description: ''
                      example: false
                      nullable: false
                    remindBefore:
                      type: string
                      description: ''
                      example: architecto
                      nullable: false
                relatedType:
                  type: string
                  description: ''
                  example: architecto
                  nullable: true
                relatedId:
                  type: string
                  description: 'Must be a valid UUID.'
                  example: a4855dc5-0acb-33c3-b921-f4291f719ca0
                  nullable: true
              required:
                - title
                - startAt
                - endAt
                - status
                - visibility
                - timezone
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1EventsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the event.'
        example: architecto
        required: true
        schema:
          type: string
  /api/v1/roles:
    get:
      summary: ''
      operationId: getApiV1Roles
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiV1Roles
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: b
                  nullable: false
                tenantId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the tenants table.'
                  example: architecto
                  nullable: false
                permissions:
                  type: array
                  description: 'The <code>name</code> of an existing record in the permissions table.'
                  example: null
                  items:
                    type: string
              required:
                - name
                - tenantId
      security: []
  '/api/v1/roles/{id}':
    put:
      summary: ''
      operationId: putApiV1RolesId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: b
                  nullable: false
                tenantId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the tenants table.'
                  example: architecto
                  nullable: false
                permissions:
                  type: array
                  description: 'The <code>name</code> of an existing record in the permissions table.'
                  example: null
                  items:
                    type: string
              required:
                - name
                - tenantId
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1RolesId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the role.'
        example: 01973b12-a666-702f-a3b9-e572b063e068
        required: true
        schema:
          type: string
  /api/v1/api-keys:
    get:
      summary: ''
      operationId: getApiV1ApiKeys
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiV1ApiKeys
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: b
                  nullable: false
                scopes:
                  type: array
                  description: ''
                  example:
                    - read
                  items:
                    type: string
                    enum:
                      - read
                      - write
              required:
                - name
      security: []
  '/api/v1/api-keys/{id}':
    get:
      summary: ''
      operationId: getApiV1ApiKeysId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiV1ApiKeysId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: b
                  nullable: false
                scopes:
                  type: array
                  description: ''
                  example:
                    - write
                  items:
                    type: string
                    enum:
                      - read
                      - write
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1ApiKeysId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the api key.'
        example: architecto
        required: true
        schema:
          type: string
  /api/v1/logs:
    get:
      summary: ''
      operationId: getApiV1Logs
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/exchanges:
    get:
      summary: ''
      operationId: getApiV1Exchanges
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                currency:
                  type: string
                  description: 'Must be 3 characters.'
                  example: bng
                  nullable: false
                perPage:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 100.'
                  example: 16
                  nullable: false
                sort:
                  type: string
                  description: ''
                  example: name
                  nullable: false
                  enum:
                    - name
                    - currency
                    - createdAt
                    - updatedAt
                    - '-name'
                    - '-currency'
                    - '-createdAt'
                    - '-updatedAt'
      security: []
  '/api/v1/exchanges/{id}':
    get:
      summary: ''
      operationId: getApiV1ExchangesId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the exchange.'
        example: 16
        required: true
        schema:
          type: integer
  '/api/v1/exchanges/{exchange_id}/rates':
    get:
      summary: ''
      operationId: getApiV1ExchangesExchange_idRates
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                  description: 'Must be a valid date. Must be a valid date in the format <code>Y-m-d</code>.'
                  example: '2025-06-05'
                  nullable: false
      security: []
    parameters:
      -
        in: path
        name: exchange_id
        description: 'The ID of the exchange.'
        example: 16
        required: true
        schema:
          type: integer
  /api/v1/skills:
    get:
      summary: ''
      operationId: getApiV1Skills
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiV1Skills
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category:
                  type: string
                  description: 'The <code>name</code> of an existing record in the skill_categories table.'
                  example: architecto
                  nullable: false
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: 'n'
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Eius et animi quos velit et.'
                  nullable: true
              required:
                - category
                - name
      security: []
  '/api/v1/skills/{id}':
    get:
      summary: ''
      operationId: getApiV1SkillsId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiV1SkillsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category:
                  type: string
                  description: 'The <code>name</code> of an existing record in the skill_categories table.'
                  example: architecto
                  nullable: false
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: 'n'
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Eius et animi quos velit et.'
                  nullable: true
              required:
                - category
                - name
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1SkillsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the skill.'
        example: 01973b12-a5ed-70d3-9d16-6a3919a1d383
        required: true
        schema:
          type: string
  /api/v1/skill-categories:
    get:
      summary: ''
      operationId: getApiV1SkillCategories
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiV1SkillCategories
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: b
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Eius et animi quos velit et.'
                  nullable: true
              required:
                - name
      security: []
  '/api/v1/skill-categories/{id}':
    get:
      summary: ''
      operationId: getApiV1SkillCategoriesId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiV1SkillCategoriesId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: b
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Eius et animi quos velit et.'
                  nullable: true
              required:
                - name
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1SkillCategoriesId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the skill category.'
        example: 01973b12-a5e1-7197-8741-0000e39f15d4
        required: true
        schema:
          type: string
  /api/v1/admin/contractors:
    get:
      summary: ''
      operationId: getApiV1AdminContractors
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                filter:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    name:
                      type: string
                      description: ''
                      example: null
                      nullable: false
                    email:
                      type: string
                      description: ''
                      example: null
                      nullable: false
                    phone:
                      type: string
                      description: ''
                      example: null
                      nullable: false
                    address:
                      type: string
                      description: ''
                      example: null
                      nullable: false
                    city:
                      type: string
                      description: ''
                      example: null
                      nullable: false
                    state:
                      type: string
                      description: ''
                      example: null
                      nullable: false
                    zipCode:
                      type: string
                      description: ''
                      example: null
                      nullable: false
                    country:
                      type: string
                      description: ''
                      example: null
                      nullable: false
                    taxId:
                      type: string
                      description: ''
                      example: null
                      nullable: false
                    notes:
                      type: string
                      description: ''
                      example: null
                      nullable: false
                    isActive:
                      type: string
                      description: ''
                      example: null
                      nullable: false
                    createdAt:
                      type: string
                      description: ''
                      example: null
                      nullable: false
                    updatedAt:
                      type: string
                      description: ''
                      example: null
                      nullable: false
                sort:
                  type: string
                  description: ''
                  example: isActive
                  nullable: false
                  enum:
                    - name
                    - '-name'
                    - email
                    - '-email'
                    - city
                    - '-city'
                    - country
                    - '-country'
                    - isActive
                    - '-isActive'
                    - createdAt
                    - '-createdAt'
                    - updatedAt
                    - '-updatedAt'
      security: []
    post:
      summary: ''
      operationId: postApiV1AdminContractors
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                contractor:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    tenantId:
                      type: string
                      description: 'Must be a valid UUID. The <code>id</code> of an existing record in the tenants table.'
                      example: 6ff8f7f6-1eb3-3525-be4a-3932c805afed
                      nullable: false
                    name:
                      type: string
                      description: 'Must not be greater than 255 characters.'
                      example: g
                      nullable: false
                    email:
                      type: string
                      description: 'Must be a valid email address. Must not be greater than 255 characters.'
                      example: rowan.gulgowski@example.com
                      nullable: true
                    phone:
                      type: string
                      description: 'Must not be greater than 20 characters.'
                      example: dljnikhwaykcmyuw
                      nullable: true
                    website:
                      type: string
                      description: 'Must not be greater than 255 characters.'
                      example: p
                      nullable: true
                    country:
                      type: string
                      description: 'Must not be greater than 100 characters.'
                      example: w
                      nullable: true
                    vatId:
                      type: string
                      description: 'Must not be greater than 20 characters.'
                      example: lvqwrsitcpscqldz
                      nullable: true
                    taxId:
                      type: string
                      description: 'Must not be greater than 20 characters.'
                      example: snrwtujwvlxjklqp
                      nullable: true
                    regon:
                      type: string
                      description: 'Must not be greater than 20 characters.'
                      example: pwqbewtnnoqitpxn
                      nullable: true
                    description:
                      type: string
                      description: ''
                      example: 'Eius et animi quos velit et.'
                      nullable: true
                    isActive:
                      type: boolean
                      description: ''
                      example: true
                      nullable: false
                    isBuyer:
                      type: boolean
                      description: ''
                      example: true
                      nullable: false
                    isSupplier:
                      type: boolean
                      description: ''
                      example: false
                      nullable: false
                  required:
                    - tenantId
                    - name
                address:
                  type: object
                  description: ''
                  example: null
                  nullable: true
                  properties: {  }
                bankAccount:
                  type: object
                  description: ''
                  example: null
                  nullable: true
                  properties: {  }
                options:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    fetchLogo:
                      type: boolean
                      description: ''
                      example: true
                      nullable: true
                registryConfirmation:
                  type: object
                  description: ''
                  example: null
                  nullable: true
                  properties:
                    mf:
                      type: boolean
                      description: ''
                      example: true
                      nullable: true
                    vies:
                      type: boolean
                      description: ''
                      example: true
                      nullable: true
                    regon:
                      type: boolean
                      description: ''
                      example: false
                      nullable: true
      security: []
  '/api/v1/admin/contractors/{id}':
    get:
      summary: ''
      operationId: getApiV1AdminContractorsId
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiV1AdminContractorsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                contractor:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    tenantId:
                      type: string
                      description: 'Must be a valid UUID. The <code>id</code> of an existing record in the tenants table.'
                      example: 6ff8f7f6-1eb3-3525-be4a-3932c805afed
                      nullable: false
                    name:
                      type: string
                      description: 'Must not be greater than 255 characters.'
                      example: g
                      nullable: false
                    email:
                      type: string
                      description: 'Must be a valid email address. Must not be greater than 255 characters.'
                      example: rowan.gulgowski@example.com
                      nullable: true
                    phone:
                      type: string
                      description: 'Must not be greater than 20 characters.'
                      example: dljnikhwaykcmyuw
                      nullable: true
                    website:
                      type: string
                      description: 'Must not be greater than 255 characters.'
                      example: p
                      nullable: true
                    country:
                      type: string
                      description: 'Must not be greater than 100 characters.'
                      example: w
                      nullable: true
                    vatId:
                      type: string
                      description: 'Must not be greater than 20 characters.'
                      example: lvqwrsitcpscqldz
                      nullable: true
                    taxId:
                      type: string
                      description: 'Must not be greater than 20 characters.'
                      example: snrwtujwvlxjklqp
                      nullable: true
                    regon:
                      type: string
                      description: 'Must not be greater than 20 characters.'
                      example: pwqbewtnnoqitpxn
                      nullable: true
                    description:
                      type: string
                      description: ''
                      example: 'Eius et animi quos velit et.'
                      nullable: true
                    isActive:
                      type: boolean
                      description: ''
                      example: true
                      nullable: false
                    isBuyer:
                      type: boolean
                      description: ''
                      example: true
                      nullable: false
                    isSupplier:
                      type: boolean
                      description: ''
                      example: false
                      nullable: false
                  required:
                    - tenantId
                    - name
                address:
                  type: object
                  description: ''
                  example: null
                  nullable: true
                  properties: {  }
                bankAccount:
                  type: object
                  description: ''
                  example: null
                  nullable: true
                  properties: {  }
                options:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    fetchLogo:
                      type: boolean
                      description: ''
                      example: false
                      nullable: true
                registryConfirmation:
                  type: object
                  description: ''
                  example: null
                  nullable: true
                  properties:
                    mf:
                      type: boolean
                      description: ''
                      example: false
                      nullable: true
                    vies:
                      type: boolean
                      description: ''
                      example: true
                      nullable: true
                    regon:
                      type: boolean
                      description: ''
                      example: false
                      nullable: true
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1AdminContractorsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the contractor.'
        example: architecto
        required: true
        schema:
          type: string
  /api/v1/admin/products:
    get:
      summary: ''
      operationId: getApiV1AdminProducts
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                filter:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    name:
                      type: string
                      description: ''
                      example: null
                      nullable: false
                    description:
                      type: string
                      description: ''
                      example: null
                      nullable: false
                    unitId:
                      type: string
                      description: 'Must be a valid UUID. The <code>id</code> of an existing record in the measurement_units table.'
                      example: 6ff8f7f6-1eb3-3525-be4a-3932c805afed
                      nullable: false
                    vatRateId:
                      type: string
                      description: 'Must be a valid UUID. The <code>id</code> of an existing record in the vat_rates table.'
                      example: 6b72fe4a-5b40-307c-bc24-f79acf9a1bb9
                      nullable: false
                    createdAt:
                      type: string
                      description: ''
                      example: null
                      nullable: false
                    updatedAt:
                      type: string
                      description: ''
                      example: null
                      nullable: false
                sort:
                  type: string
                  description: ''
                  example: '-name'
                  nullable: false
                  enum:
                    - name
                    - '-name'
                    - createdAt
                    - '-createdAt'
                    - updatedAt
                    - '-updatedAt'
      security: []
    post:
      summary: ''
      operationId: postApiV1AdminProducts
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tenantId:
                  type: string
                  description: 'Must be a valid UUID. The <code>id</code> of an existing record in the tenants table.'
                  example: 6ff8f7f6-1eb3-3525-be4a-3932c805afed
                  nullable: false
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: g
                  nullable: false
                description:
                  type: string
                  description: 'Must not be greater than 1000 characters.'
                  example: 'Quos velit et fugiat sunt nihil accusantium harum.'
                  nullable: true
                unitId:
                  type: string
                  description: 'Must be a valid UUID. The <code>id</code> of an existing record in the measurement_units table.'
                  example: cd1eb1ea-4697-3b9a-9dd0-988044a83af6
                  nullable: true
                priceNet:
                  type: number
                  description: 'Must be at least 0. Must not be greater than 999999.99.'
                  example: 14
                  nullable: false
                vatRateId:
                  type: string
                  description: 'Must be a valid UUID. The <code>id</code> of an existing record in the vat_rates table.'
                  example: d207102d-bce0-31f9-8c36-aa9cf4cfe75a
                  nullable: true
              required:
                - tenantId
                - name
                - priceNet
      security: []
  '/api/v1/admin/products/{id}':
    get:
      summary: ''
      operationId: getApiV1AdminProductsId
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiV1AdminProductsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tenantId:
                  type: string
                  description: 'Must be a valid UUID. The <code>id</code> of an existing record in the tenants table.'
                  example: 6ff8f7f6-1eb3-3525-be4a-3932c805afed
                  nullable: false
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: g
                  nullable: false
                description:
                  type: string
                  description: 'Must not be greater than 1000 characters.'
                  example: 'Quos velit et fugiat sunt nihil accusantium harum.'
                  nullable: true
                unitId:
                  type: string
                  description: 'Must be a valid UUID. The <code>id</code> of an existing record in the measurement_units table.'
                  example: cd1eb1ea-4697-3b9a-9dd0-988044a83af6
                  nullable: true
                priceNet:
                  type: number
                  description: 'Must be at least 0. Must not be greater than 999999.99.'
                  example: 14
                  nullable: false
                vatRateId:
                  type: string
                  description: 'Must be a valid UUID. The <code>id</code> of an existing record in the vat_rates table.'
                  example: d207102d-bce0-31f9-8c36-aa9cf4cfe75a
                  nullable: true
              required:
                - tenantId
                - name
                - priceNet
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1AdminProductsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the product.'
        example: architecto
        required: true
        schema:
          type: string
  /api/v1/ai/chat:
    post:
      summary: ''
      operationId: postApiV1AiChat
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: ''
                  example: architecto
                  nullable: false
                history:
                  type: object
                  description: ''
                  example: null
                  nullable: true
                  properties: {  }
                threadId:
                  type: string
                  description: ''
                  example: architecto
                  nullable: true
              required:
                - message
      security: []
  /api/v1/stripe/webhook:
    post:
      summary: 'Handle incoming Stripe webhooks.'
      operationId: handleIncomingStripeWebhooks
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
