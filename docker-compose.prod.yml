services:
    saasbase:
        build:
            context: './docker/prod/php'
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
                NODE_VERSION: '20'
        image: 'saasbase-prod/app'
        ports:
            - '${APP_PORT:-80}:80'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 0
        volumes:
            - '.:/var/www/html'
        networks:
            - saasbase-prod
            - saasbase-network
        depends_on:
            - pgsql
            - redis
            - soketi
            - meilisearch

    pgsql:
        image: 'postgres:17'
        ports:
            - '${FORWARD_DB_PORT:-5432}:5432'
        environment:
            PGPASSWORD: '${DB_PASSWORD}'
            POSTGRES_DB: '${DB_DATABASE}'
            POSTGRES_USER: '${DB_USERNAME}'
            POSTGRES_PASSWORD: '${DB_PASSWORD}'
        volumes:
            - 'saasbase-pgsql:/var/lib/postgresql/data'
        networks:
            - saasbase-prod
        healthcheck:
            test: ["CMD", "pg_isready", "-q", "-d", "${DB_DATABASE}", "-U", "${DB_USERNAME}"]
            retries: 3
            timeout: 5s

    soketi:
        image: quay.io/soketi/soketi:1.6-16-debian
        environment:
            SOKETI_HOST: '0.0.0.0'
            SOKETI_PORT: '6001'
            SOKETI_DEBUG: '1'
            SOKETI_METRICS_SERVER_PORT: '9601'
            SOKETI_METRICS_SERVER_HOST: '0.0.0.0'
            SOKETI_DEFAULT_APP_ID: '${PUSHER_APP_ID}'
            SOKETI_DEFAULT_APP_KEY: '${PUSHER_APP_KEY}'
            SOKETI_DEFAULT_APP_SECRET: '${PUSHER_APP_SECRET}'
        ports:
            - '${PUSHER_PORT:-6001}:6001'
            - '${PUSHER_METRICS_PORT:-9601}:9601'
        networks:
            - saasbase-prod
            - saasbase-network
        healthcheck:
            test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:6001/health"]
            retries: 3
            timeout: 5s

    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'saasbase-redis:/data'
        networks:
            - saasbase-prod
            - saasbase-network
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            retries: 3
            timeout: 5s

    meilisearch:
        image: getmeili/meilisearch:latest
        ports:
            - "7700:7700"
        environment:
            MEILI_NO_ANALYTICS: "true"
            MEILI_MASTER_KEY: "${MEILISEARCH_MASTER_KEY}"
        volumes:
            - saasbase-meilisearch:/meili_data
        networks:
            - saasbase-prod
        healthcheck:
            test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:7700/health"]
            retries: 3
            timeout: 5s

networks:
    saasbase-prod:
        driver: bridge
    saasbase-network:
        driver: bridge

volumes:
    saasbase-pgsql:
        driver: local
    saasbase-redis:
        driver: local
    saasbase-meilisearch:
        driver: local